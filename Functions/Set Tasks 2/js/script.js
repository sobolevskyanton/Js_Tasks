// 1) Создайте функцию, которая будет вычислять объем и площадь полной поверхности куба 
// (тоже базовая математика, иногда используется в создании анимаций). Эта функция принимает в 
// себя целое число со значением длины ребра куба. Ответ выведите в формате строки, который изображен в примерах.

// Если в функцию попал неправильный аргумент или вычислить значения невозможно - 
// вернуть строку "При вычислении произошла ошибка"


// площадь полной поверхности куба - 6*a^2
// let result='';
// function calculateVolumeAndArea(a) {
//     if(typeof(a) !== 'number' || !Number.isInteger(a) || a<=0) {
//         result = "При вычислении произошла ошибка!";
//         return result;
//     } else {
//     const Volume = Math.pow(a, 3);
//     const Area = 6*Math.pow(a, 2);
//     result = `Объем куба: ${Volume}, площадь всей поверхности: ${Area}`;
//     return result;
//     }
// }

// calculateVolumeAndArea(false);
// console.log(result);


//Напишите функцию, которая будет определять номер купе по переданному ей номеру места. Наглядно:
// Места - с 1 по 36
// номер купе 1 с по 9, где 1 купе = 1,2,3,4 места и тд
//Функция принимает только целое число от 1 до 36.
//Если переданный аргумент не число, отрицательное или дробное - возвращается сообщение:
// "Ошибка. Проверьте правильность введенного номера места"
// Если число 0 или больше 36, то сообщение: "Таких мест в вагоне не существует"

function getCoupeNumber(place) {

    if( !(Number.isInteger(place)) || place <0  || isNaN(place) ) {
        return "Ошибка. Проверьте правильность введенного номера места";
    } else if (place === 0 || place > 36) {
        return "Таких мест в вагоне не существует";
    } else {
        return Math.ceil(place/4);
    }
}
getCoupeNumber('hello');




// 1) Создайте функцию, которая принимает в себя целое число минут и возвращает время в нужном формате строки.
// Обратите внимание на окончание слова "час" - оно меняется в зависимости от цифры. Если вместо аргумента приходит 
// не число, дробное или отрицательное число - функция возвращает строку "Ошибка, проверьте данные"

// // Внимание! Давайте пока ограничимся максимум 600ю минутами (10 часов). 
// Так как проверки на большие числа будут раздувать код (33 часа, 31 час, 11 часов и тд). Этого будет достаточно и код 
// будет проверять именно этот промежуток (1 - 10 часов). 
// Но вы можете реализовать и полный скрипт, он тоже должен проходить тесты.

// Пример:

// getTimeFromMinutes(150) => "Это 2 часа и 30 минут"

// getTimeFromMinutes(50) => "Это 0 часов и 50 минут"

// getTimeFromMinutes(0) => "Это 0 часов и 0 минут"

// getTimeFromMinutes(-150) => "Ошибка, проверьте данные"


function getTimeFromMinutes(minutes) {
    if(minutes < 0 || minutes >600 || !(Number.isInteger(minutes)) || isNaN(minutes) ) {
        return "Ошибка, проверьте данные";
    }
    let h = Math.trunc(minutes/60);
    let hours='';
    if( h === 1) {
        hours = "час";
    } else if(h>1 && h<=4) {
        hours = "часа";
    } else {
        hours = "часов";
    }
    let min = minutes % 60;

    return `Это ${h} ${hours} и ${min} минут`;
}
console.log(getTimeFromMinutes(1)) ;







// Напишите функцию, которая принимает в себя 4 числа и возвращает самое большее из них. Если один из аргументов 
// не является числом или их меньше 4 - возвращается 0. Дробные числа разрешены.

// Пример:
// findMaxNumber(1, 5, 6.6, 11); =>  11
// findMaxNumber(1, 5, '6', '10');  =>  0


function findMaxNumber(a,b,c,d) {
    if(typeof(a) !== 'number' || typeof(b) !== 'number' || typeof(c) !== 'number' || typeof(d) !== 'number' ) {
        return 0;
    } else {
    return Math.max(a, b, c,d);
    }
}
console.log (findMaxNumber(5,6,2.5,11));





//Задача с собеседований на числа Фибоначчи

// Создайте функцию, которая будет принимать в себя один аргумент-целое положительное число. 
// Она должна возвращать строку, в которой будут через пробел выведены числа Фибоначчи. 
// Причем, их количество должно быть равно переданному аргументу.
// Если переданный аргумент не число - вернуть пустую строку. Решать без применения рекурсии.
// Пример:

// fib(4) => ''0 1 1 2"

// fib(7) => ''0 1 1 2 3 5 8"

// fib('7') => ''"

// fib(1) => "0"

// fib(0) => ''"
let result='';
function fib(num) {
    if (typeof(num) !== 'number' || num <=0 || !Number.isInteger(num) ) {
        result='';
        return result;
    } else if (num===1) {
        result = '0';
        return result;
    } else {
    let stepBefore=0;
    let step=1;
    result=`${stepBefore} ${step}`;
    for (let i=1; i<=num-2; i++) {
        let sum= step+stepBefore;
        result = result+ " " +sum;
        stepBefore=step;
        step=sum;
    }
    return result;
}
}

console.log(fib(5.5));
